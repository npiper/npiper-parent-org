<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<!-- Template Project file for my projects - based on https://maven.apache.org/pom.html -->

	<groupId>neilpiper.me</groupId>
	<artifactId>parent.org</artifactId>
	<!-- Default starting version is 0-SNAPSHOT -->
	<version>0.2.4</version>
	<packaging>pom</packaging>
	<!-- <parent /> <dependencies /> -->

	<!-- Modules, sub-modules & properties -->
	<modules />
	<properties>
		<githubOrg>npiper</githubOrg>
		<project.name>npiper-parent-org</project.name>
		<!-- Sane default when no revision property is passed in from the commandline -->
		<revision>0-SNAPSHOT</revision>
		<!-- Enforces these minimum versions on build -->
		<miniumumMavenVersion>3.5.0</miniumumMavenVersion>
		<mavenEnforcerPluginVersion>3.0.0-M3</mavenEnforcerPluginVersion>
		<project.scm.id>gitserver</project.scm.id>
		<mavenScmPluginVersion>1.11.2</mavenScmPluginVersion>
		<!-- Default maven plugin versions -->
	</properties>


	<build>

		<!-- Extension : s3 wagon for repo -->
		<extensions>
			<extension>
				<groupId>com.github.seahen</groupId>
				<artifactId>maven-s3-wagon</artifactId>
				<version>1.3.3</version>
			</extension>

			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>3.5.1</version>
			</extension>
		</extensions>

		<!-- Set inherited to true -->
		<plugins>


			<!-- ENFORCER !! -->
			<!-- Maven 3.2+ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${mavenEnforcerPluginVersion}</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<phase>validate</phase>
						<inherited>true</inherited>
						<configuration>
							<rules>
								<!-- Maven >= 3.5+ allows parent inheritance -->
								<requireMavenVersion>
									<version>${miniumumMavenVersion}</version>
								</requireMavenVersion>

							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

		</plugins>

		<!-- These plugin definitions are inherited by child POM'ss -->
		<pluginManagement>
			<plugins>


				<!-- Needed due to bug in mvn site plugin https://stackoverflow.com/questions/51091539/maven-site-plugins-3-3-java-lang-classnotfoundexception-org-apache-maven-doxia -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.7</version>
				</plugin>



			</plugins>
		</pluginManagement>
	</build>



	<!-- REPORTING -->

	<!-- PROJECT INFORMATION -->

	<!-- Name of the project or module , typically more than just the artifactId 
		i.e. Java 1.5 = 'tiger', printed in the execution, build. Not mandatory but 
		useful. -->
	<name>npiper-parent-org</name>

	<!-- Description of a project is always good, helps POM readers -->
	<description>
	    ${project.name} 
	    - GroupID: ${project.groupId}  
	    - ArtifactId: ${project.artifactId}  
	    - Version: ${project.version}  
	    - Build revision: ${revision}
	    - Tag: ${project.version}_${revision}
	  </description>

	<!-- URL is helpful for maintenance on where to find the source code, project 
		site. Github pages URL preferred -->
	<url>https://github.com/${githubOrg}/${project.name}</url>
	<!-- When did this all start...? -->
	<inceptionYear>2018</inceptionYear>

	<!-- legal documents defining how and when a project (or parts of a project) 
		may be used -->
	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>

		</license>
	</licenses>

	<!-- Typically only core dev team, leads, buildmasters. If the person should 
		not be contacted about the project or initiative, they need not be listed 
		here -->
	<developers>
		<developer>
			<id>npiper</id>
			<name>Neil Piper</name>
			<email>solveapuzzledev@gmail.com</email>
			<url>https://www.linkedin.com/in/piperneil</url>
			<organization>neilpiper.me</organization>
			<organizationUrl>http://neilpiper.me</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>Europe/London</timezone>
			<properties>
				<picUrl>https://avatars2.githubusercontent.com/u/436314?s=300</picUrl>
			</properties>
		</developer>
	</developers>


	<!-- ENVIRONMENT & RELEASE SETTINGS -->

	<!-- Where / Which system to raise issues in, can be used by plugins but 
		typically for project / site documentation. -->
	<issueManagement>
		<system>github</system>
		<url>https://github.com/${githubOrg}/${project.name}/issues</url>
	</issueManagement>

	<!-- Link to Travis-CI url -->
	<ciManagement>
		<system>Github Actions</system>
		<url>https://github.com/${githubOrg}/${project.name}/actions</url>
	</ciManagement>


	<!-- Mailing lists are a great tool for keeping in touch with people about 
		a project. Most mailing lists are for developers and users. -->
	<!-- <mailingLists> <mailingList> <name>PROJECT ${project.name} Developer 
		mailing list</name> <subscribe>${project.name}-dev-subscribe@sonatype.org</subscribe> 
		<unsubscribe>${project.name}-dev-unsubscribe@sonatype.org</unsubscribe> <post>${project.name}-dev@sonatype.org</post> 
		<archive>?</archive> </mailingList> </mailingLists> -->


	<!-- Software configuration management details -->
	<!-- Critical for the mvn:release plugin & process, where to find the source 
		code. -->
	<scm>
		<url>https://github.com/${githubOrg}/${project.name}</url>
		<connection>scm:git:git://github.com/${githubOrg}/${project.name}.git</connection>
		<!-- <developerConnection>scm:git:git@github.com:npiper/${project.name}.git</developerConnection> -->

		<developerConnection>scm:git:https://github.com/${githubOrg}/${project.name}.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<!-- REPOSITORIES & PLUGIN REPOSITORIES -->
	<repositories>
		<!-- public release repo -->
		<repository>
			<id>solveapuzzle-repo</id>
			<!-- <url>s3://solveapuzzle-repo/release</url> -->
			<url>https://s3-ap-southeast-2.amazonaws.com/solveapuzzle-repo/release</url>
		</repository>
	</repositories>
	<pluginRepositories />


	<!--manages the distribution of the artifact and supporting files during 
		build, release process. Critical for the mvn:deploy & mvn:release process -->
	<distributionManagement>
		<downloadUrl>https://s3-ap-southeast-2.amazonaws.com/solveapuzzle-repo</downloadUrl>
		<repository>
			<id>solveapuzzle-repo</id>
			<url>s3://solveapuzzle-repo/release</url>
		</repository>

		<!-- Where the pages go -->
		<site>
			<id>gh-pages</id>
			<name></name>
			<url>https://${githubOrg}.github.io/${project.name}/</url>
			<!-- <url>file:///Users/neilpiper/SANDBOX/SITE/${project.name}</url> -->
		</site>
	</distributionManagement>

	<!-- PROFILES Build & Deploy Profiles -->

	<!-- <profiles> </profiles> -->

	<organization>
		<name>neilpiper.me</name>
		<url>http://dev.neilpiper.me</url>
	</organization>

	<!-- BUILD SERVER ONLY PROFILE -->

	<!-- SCM Tagging - Maven Deploy Plugin Github pages plugin Maven site upload 
		to Github pages -->

	<profiles>
		<profile>
			<id>travis-build-location</id>
			<activation>
				<activeByDefault>false</activeByDefault>

				<!-- Github Actions  has the environment variable 'CI=true' on all builds. 
				https://docs.github.com/en/actions/learn-github-actions/environment-variables
				-->

				<property>
					<name>env.CI</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>




					<plugin>
						<!-- Deploy the web site -->
						<!-- Needs to be in <plugins> so this and child ones can inherit and 
							<pluginManagement> see: https://stackoverflow.com/questions/10483180/maven-what-is-pluginmanagement -->

						<groupId>com.github.github</groupId>
						<artifactId>site-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<skip>false</skip>
						</configuration>
					</plugin>


				</plugins>

				<pluginManagement>
					<plugins>




						<plugin>
							<!-- Deploy the web site to github pages -->
							<groupId>com.github.github</groupId>
							<artifactId>site-maven-plugin</artifactId>
							<version>0.12</version>
							<configuration>
								<!-- Plugin configuration ges here -->

								<!-- The commit message -->
								<message>Building site for ${project.name} at ${project.version}
									- revision ${revision}</message>

								<server>github</server>

								<!-- The location where the site is uploaded -->

								<!-- Use merge or override the content -->
								<merge>false</merge>

							</configuration>
							<executions>
								<execution>
									<goals>
										<goal>site</goal>
									</goals>
									<phase>site</phase>
								</execution>
							</executions>
						</plugin>

						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-deploy-plugin</artifactId>
							<configuration>
								<skip>false</skip>
							</configuration>
						</plugin>


						<!-- Maven SCM Plugin - tag on deployment -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-scm-plugin</artifactId>
							<version>1.9.5</version>
							<configuration>
								<connectionType>developerConnection</connectionType>
								<tag>${project.version}_${revision}</tag>
							</configuration>
						</plugin>

					</plugins>




				</pluginManagement>

			</build>

		</profile>
	</profiles>


</project>
